{"version":3,"file":"js/135.2e1206b3.js","mappings":"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","sources":["webpack://agents/./src/components/GunTest.vue?985c","webpack://agents/src/components/GunTest.vue","webpack://agents/./src/components/GunTest.vue?5148","webpack://agents/./src/components/GunTest.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\" Gun test \"),_c('b-input',{attrs:{\"placeholder\":\"type a command and press enter\"},on:{\"change\":function($event){return _vm.command()}},model:{value:(_vm.command_input),callback:function ($$v) {_vm.command_input=$$v},expression:\"command_input\"}}),_c('h3',[_vm._v(\"Some possible commands\")]),_vm._m(0),_vm._v(\" Result : \"+_vm._s(_vm.last)+\" \"),_c('b-input',{model:{value:(_vm.newDo),callback:function ($$v) {_vm.newDo=$$v},expression:\"newDo\"}}),_c('b-button',{on:{\"click\":_vm.add}},[_vm._v(\"Add\")]),_c('ul',_vm._l((_vm.todos),function(node,key){return _c('li',{key:key},[_vm._v(\" \"+_vm._s(key)+\" : \"+_vm._s(node.title || node.GrosTitre))])}),0),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Enter something...\",\"rows\":\"3\",\"max-rows\":\"6\"},on:{\"input\":_vm.updateText},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('GunSignin'),_c('GunLogin'),(_vm.gunUser!=undefined)?_c('div',[_vm._v(\" gunUser \"+_vm._s(_vm.gunUser.alias)+\" \")]):_vm._e(),_c('b-input',{model:{value:(_vm.speak_text),callback:function ($$v) {_vm.speak_text=$$v},expression:\"speak_text\"}}),_c('b-button',{on:{\"click\":_vm.speak}},[_vm._v(\"Speak\")]),_vm._v(\" causette : \"+_vm._s(_vm.causette)+\" \")],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"my.object.name = truc\")]),_c('li',[_vm._v(\"cat my.object.name\")]),_c('li',[_vm._v(\"my.object.test = {\\\"og\\\": \\\"gro\\\", \\\"trif\\\": \\\"gr\\\", \\\"gft\\\": 5}\")]),_c('li',[_vm._v(\"cat my.object.test.og\")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    Gun test\r\n    <b-input @change=\"command()\" v-model=\"command_input\" placeholder=\"type a command and press enter\" />\r\n    <h3>Some possible commands</h3>\r\n    <ul>\r\n      <li>my.object.name = truc</li>\r\n      <li>cat my.object.name</li>\r\n      <li>my.object.test = {\"og\": \"gro\", \"trif\": \"gr\", \"gft\": 5}</li>\r\n      <li>cat my.object.test.og</li>\r\n    </ul>\r\n\r\n    Result : {{last}}\r\n\r\n    <b-input v-model=\"newDo\" />\r\n    <b-button @click=\"add\">Add</b-button>\r\n    <!-- todos : {{ todos }} -->\r\n    <ul>\r\n      <li v-for=\"(node, key) of todos\" :key=\"key\"> {{ key }} : {{node.title || node.GrosTitre}}</li>\r\n    </ul>\r\n\r\n    <b-form-textarea\r\n    id=\"textarea\"\r\n    v-model=\"text\"\r\n    placeholder=\"Enter something...\"\r\n    rows=\"3\"\r\n    max-rows=\"6\"\r\n    @input=\"updateText\"\r\n    ></b-form-textarea>\r\n    <GunSignin />\r\n    <GunLogin />\r\n    <div v-if=\"gunUser!=undefined\">\r\n      gunUser {{ gunUser.alias }}\r\n    </div>\r\n\r\n    <b-input v-model=\"speak_text\" /><b-button @click=\"speak\">Speak</b-button>\r\n    causette : {{ causette }}\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"GunTest\",\r\n  components: {\r\n    // 'ThreeScene': () => import('@/components/three/ThreeScene'),\r\n    'GunSignin': () => import('@/components/gun/GunSignin'),\r\n    'GunLogin': () => import('@/components/gun/GunLogin'),\r\n    // Hello\r\n    // HelloWorld\r\n  },\r\n  data(){\r\n    return{\r\n      todos : {},\r\n      newDo: \"\",\r\n      command_input: \"\",\r\n      last: {key: \"\", value: \"\"},\r\n      text: \"\",\r\n      speak_text: \"\",\r\n      causette : []\r\n    }\r\n  },\r\n  mounted: function() {\r\n    //  let app = this\r\n    var newline = String.fromCharCode(13, 10);\r\n    // this.todos = this.$gun.get('todos')\r\n    this.$gun.get('RaN5Dom_todos').map().on((node, key) => {\r\n\r\n      // add results straight to the Vue component state\r\n      // and get updates when nodes are updated by GUN\r\n      this.todos[key] = node;\r\n      //  console.log(this.todos)\r\n    });\r\n\r\n    let rootBrain = {name: 'RaN5Dom_neurones'}\r\n    this.$gunGet(rootBrain)\r\n\r\n    this.$gun.get('RaN5Dom_text').once((node) => { // Retrieve the text value on startup\r\n      //console.log(node)\r\n      if (node != undefined){\r\n        this.text = node.text.replaceAll('\\\\n', newline);\r\n      }\r\n\r\n      // if(node == undefined) {\r\n      //   this.$gun.get('text').put({text: \"Write the text here\"})\r\n      // } else {\r\n      //   console.log(\"Found Node\")\r\n      //   app.text = node.text\r\n      // }\r\n    })\r\n\r\n    this.$gun.get('RaN5Dom_text').on((node) => { // Is called whenever text is updated\r\n      console.log(\"Receiving Update\")\r\n      console.log(node)\r\n\r\n      this.text = node.text.replaceAll('\\\\n', newline);\r\n    })\r\n\r\n    this.$gun.on('auth', function(u){\r\n      console.log(\"auth\", u)\r\n      //  app.updateSay()\r\n      // this.gunUser.get('said').map().once((say =>\r\n      //   console.log(say)\r\n      // )\r\n\r\n      //  );\r\n    });\r\n\r\n  },\r\n  methods:{\r\n    speak(){\r\n      console.log(\"speak_text\", this.speak_text)\r\n      if(this.gunUser == undefined){\r\n\r\n        alert (\"you should 'Gun Login' to speak! \")\r\n        return }\r\n        this.$gun.user().get('said').set(this.speak_text);\r\n        this.speak_text = \"\"\r\n      },\r\n      add(){\r\n        //  console.log(this.newDo)\r\n        this.$gun.get('RaN5Dom_todos').set({GrosTitre: this.newDo})\r\n        this.newDo = \"\"\r\n      },\r\n      command(){\r\n        let command = {}\r\n        command.fullCommand = this.command_input.trim()\r\n        command.commandArray = command.fullCommand.split(\" \")\r\n        command.first = command.commandArray[0]\r\n        console.log(\"command\", command)\r\n        if(command.commandArray[1] == '='){\r\n          this.set(command)\r\n        }\r\n        if(command.commandArray[0] == 'cat'){\r\n          this.cat(command)\r\n        }\r\n        this.command_input = \"\"\r\n      },\r\n\r\n\r\n      cat(command){\r\n        let app = this\r\n        let object = command.commandArray[1]\r\n\r\n        console.log(\"lecture de \", object )\r\n        let path = object.split('.')\r\n        let currentNode = undefined\r\n        for (const p of path){\r\n          console.log(p)\r\n          currentNode = currentNode == undefined ?  this.$gun.get(p) : currentNode.get(p)\r\n          console.log(\"current\",currentNode)\r\n        }\r\n        currentNode.once(function(data, key){\r\n          console.log( key, data);\r\n          console.log('the value is', data)\r\n          app.last.key = key,\r\n          app.last.value = data\r\n        });\r\n\r\n      },\r\n\r\n      set(command/*, overwrite = true*/){\r\n        let object = command.commandArray[0]\r\n        // remove object & equal sign\r\n        command.commandArray.splice(0, 2)\r\n        let value = command.commandArray.join(' ')\r\n        console.log(\"affectation de \", value , \"dans\", object )\r\n        let path = object.split('.')\r\n        let currentNode = undefined\r\n        for (const p of path){\r\n          console.log(p)\r\n          currentNode = currentNode == undefined ?  this.$gun.get(p) : currentNode.get(p)\r\n          console.log(\"current\",currentNode)\r\n        }\r\n        currentNode.once(function(data, key){\r\n          console.log( key, data);\r\n          console.log('the value is', data)\r\n        });\r\n\r\n        try {\r\n          value = JSON.parse(value)\r\n        }catch(e){\r\n          console.log(e)\r\n        }\r\n        finally{\r\n          currentNode.put(value);\r\n        }\r\n\r\n\r\n\r\n      },\r\n      updateText(){\r\n        console.log(\"Updating Text\", this.text)\r\n        this.$gun.get('RaN5Dom_text').put({text: this.text}) // Edit the value in our db\r\n      },\r\n      updateSay(){\r\n        let app = this\r\n        this.causette = []\r\n        this.$gun.user().get('said').map().once(say => {\r\n          console.log(\"SAY\", say)\r\n          app.causette.push(say)\r\n        }\r\n      )\r\n    }\r\n  },\r\n  watch:{\r\n    gunUser(){\r\n      console.log(\"gunUser\",this.gunUser)\r\n      if (this.gunUser != undefined){\r\n        this.updateSay()\r\n      }\r\n\r\n    }\r\n  },\r\n  computed:{\r\n    gunUser:{\r\n      get () { return this.$store.state.gun.gunUser },\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GunTest.vue?vue&type=template&id=66ebfa54&\"\nimport script from \"./GunTest.vue?vue&type=script&lang=js&\"\nexport * from \"./GunTest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","attrs","on","$event","command","model","value","callback","$$v","command_input","expression","_m","_s","last","newDo","add","_l","node","key","title","GrosTitre","updateText","text","undefined","gunUser","alias","_e","speak_text","speak","causette","staticRenderFns","name","components","data","todos","mounted","newline","String","fromCharCode","$gun","get","map","rootBrain","$gunGet","once","replaceAll","console","log","u","methods","alert","cat","currentNode","app","set","watch","updateSay","computed","component"],"sourceRoot":""}