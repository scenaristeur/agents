{"version":3,"file":"js/680.b720dd3a.js","mappings":"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","sources":["webpack://agents/./src/components/directed/Ui.vue?726a","webpack://agents/src/components/directed/Ui.vue","webpack://agents/./src/components/directed/Ui.vue?d567","webpack://agents/./src/components/directed/Ui.vue","webpack://agents/./src/neurone-factory/templates/neurone1.js","webpack://agents/./src/neurone-factory/base.js","webpack://agents/./src/neurone-factory/brain.js","webpack://agents/./src/neurone-factory/neurone.js","webpack://agents/./src/neurone-factory/command.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"guiDiv\",staticStyle:{\"position\":\"absolute\",\"top\":\"500\",\"left\":\"200\",\"z-index\":\"2\"}}),_c('div',{ref:\"guiProps\",staticStyle:{\"position\":\"absolute\",\"top\":\"200\",\"left\":\"100\",\"z-index\":\"2\"}}),_c('b-modal',{attrs:{\"id\":\"modal-field\",\"title\":\"New Field\"},on:{\"ok\":_vm.addField}},[(_vm.field != null)?_c('b-form-input',{attrs:{\"placeholder\":\"new property / link\"},model:{value:(_vm.field.name),callback:function ($$v) {_vm.$set(_vm.field, \"name\", $$v)},expression:\"field.name\"}}):_vm._e()],1),_c('b-modal',{attrs:{\"id\":\"modal-brain\",\"title\":\"Brain\"}},[_c('b-form-input',{attrs:{\"placeholder\":\"Enter the brain name\"},model:{value:(_vm.brainName),callback:function ($$v) {_vm.brainName=$$v},expression:\"brainName\"}}),_c('b-button',{attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.newBrain}},[_vm._v(\"New Brain\")]),_c('b-list-group',{staticStyle:{\"height\":\"200px\",\"overflow-y\":\"scroll\"}},_vm._l((_vm.brains),function(brain){return _c('b-list-group-item',{key:brain.id,attrs:{\"button\":\"\"},on:{\"click\":function($event){return _vm.switchBrain(brain)}}},[_vm._v(\" \"+_vm._s(brain.name)+\" \")])}),1)],1),_c('b-modal',{attrs:{\"id\":\"modal-properties\",\"title\":\"Properties\"}}),_c('b-modal',{attrs:{\"id\":\"modal-links\",\"title\":\"Links\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <div ref=\"guiDiv\" style=\"position:absolute; top:500; left:200;z-index:2\"></div>\r\n    <div ref=\"guiProps\" style=\"position:absolute;top:200;left:100;z-index:2\"></div>\r\n\r\n    <b-modal id=\"modal-field\"\r\n    title=\"New Field\"\r\n    @ok=\"addField\"\r\n    >\r\n    <!--  -->\r\n    <b-form-input v-if=\"field != null\" v-model=\"field.name\" placeholder=\"new property / link\"></b-form-input>\r\n  </b-modal>\r\n\r\n  <b-modal id=\"modal-brain\" title=\"Brain\">\r\n    <b-form-input v-model=\"brainName\" placeholder=\"Enter the brain name\"></b-form-input>\r\n    <b-button variant=\"primary\" @click=\"newBrain\">New Brain</b-button>\r\n    <b-list-group style=\"height:200px;overflow-y: scroll;\">\r\n      <b-list-group-item\r\n      v-for=\"brain of brains\"\r\n      :key=\"brain.id\"\r\n      button\r\n      @click=\"switchBrain(brain)\">\r\n      {{brain.name}}\r\n    </b-list-group-item>\r\n  </b-list-group>\r\n\r\n</b-modal>\r\n\r\n\r\n<b-modal id=\"modal-properties\"\r\ntitle=\"Properties\"\r\n>\r\n<!--  -->\r\n<!-- <b-form-input v-if=\"field != null\" v-model=\"field.name\" placeholder=\"new property / link\"></b-form-input> -->\r\n</b-modal>\r\n\r\n<b-modal id=\"modal-links\"\r\ntitle=\"Links\"\r\n>\r\n<!--  -->\r\n<!-- <b-form-input v-if=\"field != null\" v-model=\"field.name\" placeholder=\"new property / link\"></b-form-input> -->\r\n</b-modal>\r\n\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport { GUI } from 'dat.gui'\r\nimport * as THREE from \"three\";\r\nimport { Neurone ,  Brain/*, Graph*/ } from '@/neurone-factory'\r\nexport default {\r\n  name: \"Ui\",\r\n  props:['Graph', 'nodes'],\r\n  data(){\r\n    return{\r\n      brain: null,\r\n      brains: [],\r\n      brainName: \"\",\r\n      field: null,\r\n      clearing: false,\r\n      fieldType: \"text\",\r\n      show: false,\r\n      currentProp: {},\r\n      newValue: null,\r\n      link: {},\r\n      permissions: null\r\n    }\r\n  },\r\n  mounted(){\r\n\r\n    //https://sbcode.net/threejs/dat-gui/\r\n    //http://learningthreejs.com/blog/2011/08/14/dat-gui-simple-ui-for-demos/\r\n    // dat.gui https://github.com/dataarts/dat.gui/blob/master/API.md\r\n    // http://stemkoski.github.io/Three.js/#gui\r\n\r\n    let guiDiv = this.$refs.guiDiv\r\n    //  console.log(guiDiv)\r\n    this.gui = new GUI(\r\n      {autoPlace: false}\r\n    )\r\n    guiDiv.appendChild(this.gui.domElement);\r\n    // const cameraFolder = gui.addFolder('Camera')\r\n    // cameraFolder.add(camera.position, 'z', 0, 10)\r\n    // cameraFolder.open()\r\n    this.buildGuiTools()\r\n    //this.buildGuiNode()\r\n    //this.buildGuiTest()\r\n  },\r\n  methods:{\r\n    updateNodeFolder(){\r\n      if (this.nodeFolder != null){\r\n        this.gui.removeFolder(this.nodeFolder)\r\n      }\r\n\r\n      var lignes = {\r\n        // message: 'dat.gui',\r\n        // speed: 0.8,\r\n        // displayOutline: false,\r\n        //color: \"#ff0000\", // color (change \"#\" to \"0x\")\r\n        openProperties: this.openProperties,\r\n        openLinks: this.openLinks,\r\n        // resetCamera: this.resetCamera\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n      this.nodeFolder = this.gui.addFolder('Node')\r\n      // console.log(this.nodeFolder)\r\n      console.log(this.currentNode)\r\n      this.currentNode.age == undefined ? this.currentNode.age = 0 : \"\"\r\n      this.currentNode.privacy == undefined ? this.currentNode.privacy = \"\" : \"\"\r\n      //this.currentNode.age == undefined ?\r\n      // console.log(this.nodeFolder.__controllers)\r\n      // this.nodeFolder.__controllers.forEach((item) => {\r\n      //   console.log('remove', item)\r\n      //   this.nodeFolder.remove(item)\r\n      // });\r\n      //\r\n      // console.log(this.nodeFolder.__controllers)\r\n      // this.nodeFolder.domElement = \"\"\r\n      //  Object.assign(this.nodeFolder.__controllers, [])\r\n      //  this.nodeFolder.updateDisplay()\r\n      // this.nodeFolder.remove('name')\r\n      // this.nodeFolder.remove('color')\r\n      // let nameController = new Controller()\r\n      // this.nodeFolder.add(this.currentNode, 'name')\r\n      this.nodeFolder.add(this.currentNode, 'name')\r\n      this.nodeFolder.add(this.currentNode, 'age')\r\n      // this.nodeFolder.add(this.currentNode, 'type')\r\n      // this.nodeFolder.add(this.currentNode, 'url')\r\n      this.nodeFolder.add(this.currentNode, 'privacy')\r\n      this.currentNode.created != undefined ? this.nodeFolder.add(this.currentNode, 'created') : \"\"\r\n      this.nodeFolder.add( lignes, 'openProperties' ).name(\"Properties\");\r\n      this.nodeFolder.add( lignes, 'openLinks' ).name(\"Links\");\r\n      // const propsFolder = this.nodeFolder.addFolder('Properties')\r\n      // const linksFolder = this.nodeFolder.addFolder('Links')\r\n      //\r\n      //\r\n      // var lignes = {\r\n      //   newProperty: this.newProperty,\r\n      //   newLink: this.newLink,\r\n      //   message: 'props menu',\r\n      //   messageLink: 'Link menu',\r\n      //   speed: 0.8,\r\n      // }\r\n      //\r\n      // propsFolder.add( lignes, 'newProperty' ).name(\"New property\");\r\n      // linksFolder.add( lignes, 'newLink' ).name(\"New link\");\r\n      //\r\n      //\r\n      // propsFolder.add(lignes, 'message')\r\n      // linksFolder.add(lignes, 'messageLink')\r\n      // const testsub = propsFolder.addFolder(\"sub\")\r\n      // testsub.add(lignes, \"speed\", -5, 5)\r\n      //\r\n      // this.currentNode[\"properties\"].forEach((item) => {\r\n      //   console.log(item)\r\n      //   // templigne = {\r\n      //   //\r\n      //   // }\r\n      //\r\n      //   var lignes_value = {\r\n      //     addValue: this.addValue,\r\n      //   }\r\n      //\r\n      //   let folder = propsFolder.addFolder(item.name)\r\n      //   folder.add( lignes_value, 'addValue' ).name(\"New value\");\r\n      //\r\n      //   console.log(folder)\r\n      //   item.values.forEach((v) => {\r\n      //     console.log(v)\r\n      //     //folder.add(item, 'name')//.name(item.name)\r\n      //\r\n      //   });\r\n      //\r\n      //\r\n      //\r\n      // });\r\n\r\n\r\n\r\n\r\n      // this.nodeFolder.add(this.currentNode, 'url')\r\n      //  this.nodeFolder.add(this.currentNode, 'created')\r\n      //  this.nodeFolder.add(this.currentNode, 'color')\r\n      let app = this\r\n      if(this.currentNode.color != undefined){\r\n        var nodeColor = this.nodeFolder.addColor( this.currentNode, 'color' ).name('Color').listen();\r\n        nodeColor.onChange(function(value) // onFinishChange\r\n        {\r\n          console.log(\"must update color value\", value)\r\n          app.currentNode.color = value.replace(\"#\", \"0x\") //);\r\n        });\r\n      }\r\n\r\n      this.nodeFolder.add(this.currentNode, 'privacy')\r\n      this.nodeFolder.open()\r\n    },\r\n    addValue(){\r\n      console.log(\"new value\")\r\n    },\r\n    buildGuiNode(){\r\n      var lignes = {\r\n        message: 'props menu',\r\n        messageLink: 'Link menu',\r\n        speed: 0.8,\r\n      }\r\n      this.nodeFolder = this.gui.addFolder('Node')\r\n      const propsFolder = this.nodeFolder.addFolder('Props')\r\n      const linksFolder = this.nodeFolder.addFolder('Links')\r\n      propsFolder.add(lignes, 'message')\r\n      linksFolder.add(lignes, 'messageLink')\r\n      const testsub = propsFolder.addFolder(\"sub\")\r\n      testsub.add(lignes, \"speed\", -5, 5)\r\n    },\r\n    buildGuiTools(){\r\n      var lignes = {\r\n        // message: 'dat.gui',\r\n        // speed: 0.8,\r\n        // displayOutline: false,\r\n        //color: \"#ff0000\", // color (change \"#\" to \"0x\")\r\n        openBrains: this.openBrains,\r\n        newNeurone: this.newNeurone,\r\n        resetCamera: this.resetCamera\r\n      };\r\n\r\n      const toolFolder = this.gui.addFolder('Tools')\r\n      toolFolder.add( lignes, 'openBrains' ).name(\"Brains\");\r\n      toolFolder.add( lignes, 'newNeurone' ).name(\"New neurone\");\r\n      toolFolder.add( lignes, 'resetCamera' ).name(\"Reset camera\");\r\n      toolFolder.open()\r\n      this.gui.open()\r\n    },\r\n    buildGuiTest(){\r\n      const geometry = new THREE.BoxGeometry()\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0x00ff00,\r\n        wireframe: true,\r\n      })\r\n      const cube = new THREE.Mesh(geometry, material)\r\n      this.Graph.scene().add(cube)\r\n\r\n      var text = {\r\n        message: 'dat.gui',\r\n        speed: 0.8,\r\n        displayOutline: false,\r\n        color: \"#ff0000\", // color (change \"#\" to \"0x\")\r\n        //  newNeurone: this.newNeurone\r\n      };\r\n\r\n\r\n      const cubeFolder = this.gui.addFolder('Test')\r\n      cubeFolder.add(cube.rotation, 'x', 0, Math.PI * 2)\r\n      cubeFolder.add(cube.rotation, 'y', 0, Math.PI * 2)\r\n      cubeFolder.add(cube.rotation, 'z', 0, Math.PI * 2)\r\n      cubeFolder.add(text, 'message');\r\n      cubeFolder.add(text, 'speed', -5, 5);\r\n      cubeFolder.add(text, 'displayOutline');\r\n      // cubeFolder.add( text, 'newNeurone' ).name(\"New neurone\");\r\n      //cubeFolder.open()\r\n\r\n      var cubeColor = cubeFolder.addColor( text, 'color' ).name('Color').listen();\r\n      cubeColor.onChange(function(value) // onFinishChange\r\n      {   cube.material.color.setHex( value.replace(\"#\", \"0x\") );   });\r\n\r\n    },\r\n    openProperties(){\r\n      this.$bvModal.show(\"modal-properties\")\r\n    },\r\n    openLinks(){\r\n      this.$bvModal.show(\"modal-links\")\r\n\r\n    },\r\n    newProperty(){\r\n      console.log(\"newProperty\")\r\n      this.field = {name: \"\", category: \"ve:properties\"}\r\n      this.$bvModal.show(\"modal-field\")\r\n    },\r\n    addField(){\r\n      console.log(this.field)\r\n      if(this.clearing == false){\r\n        let p = {name: this.field.name, values: []}\r\n        this.currentNode[this.field.category] == undefined ? this.currentNode[this.field.category] = [] : \"\"\r\n        var index = this.currentNode[this.field.category].findIndex(x => x.name==p.name);\r\n        index === -1 ? this.currentNode[this.field.category].push(p) : alert(p.name+\" already exist\")\r\n      }\r\n      console.log(this.currentNode)\r\n      this.updateNodeFolder()\r\n    },\r\n    newLink(){\r\n      console.log(\"newLink\")\r\n      this.field = {name: \"\", category: \"links\"}\r\n      this.$bvModal.show(\"modal-field\")\r\n    },\r\n    openBrains(){\r\n      //alert(\"newBrain\")\r\n\r\n      this.$bvModal.show(\"modal-brain\")\r\n    },\r\n    newBrain(){\r\n      this.brain = new Brain({name: this.brainName})\r\n      console.log(this.brain)\r\n      this.brains.push(this.brain)\r\n      this.brainName = \"\"\r\n      this.$gunGet(this.brain)\r\n    },\r\n    switchBrain(b){\r\n      console.log(b)\r\n      this.$gunGet(b)\r\n      //  console.error(\"must save current brain\", this.Graph.graphData())\r\n      this.$emit('switch-brain', b)\r\n    },\r\n    newNeurone(){\r\n      console.log(\"newNeurone\")\r\n      let node = new Neurone(\r\n        {\r\n          //  blip: \"blop\",\r\n          //  color: this.randomColor(),\r\n          name: \"name for graph_\"+this.nodes.length,\r\n          age: 0,\r\n          type: \"neurone\"\r\n        }\r\n      )\r\n      console.log(\"neurone \", node)\r\n      //  let node = neurone._data\r\n      // node['name'] == undefined ? node['name'] = \"test\" : \"\"\r\n      // node['color'] == undefined ? node['color'] = this.randomColor() : \"\"\r\n      //  let node = { name: \"test\", type: undefined, color: this.randomColor() /*\"#ffffff\"*/}\r\n\r\n      // eslint-disable-next-line\r\n      this.nodes.push(node)\r\n\r\n      // this.Graph.graphData({\r\n      //   nodes: this.nodes,\r\n      //   //links: links\r\n      //   links: this.links //[...links/*, { source: \"https://spoggy-test13.solidcommunity.net/\", target: f.url }*/]\r\n      // })\r\n      console.log(\"should make a node autofocus\")\r\n      // const distance = 40;\r\n      // const distRatio = 1 + distance/Math.hypot(node.x, node.y, node.z);\r\n      //\r\n      // this.Graph.cameraPosition(\r\n      //   { x: node.x * distRatio, y: node.y * distRatio, z: node.z * distRatio }, // new position\r\n      //   node, // lookAt ({ x, y, z })\r\n      //   3000  // ms transition duration\r\n      // );\r\n    },\r\n    resetCamera(){\r\n      this.Graph.cameraPosition(\r\n        { x: 0, y: 0, z: 40 },\r\n        3000  // ms transition duration\r\n      );\r\n    },\r\n    randomColor() {\r\n      let color = '#'\r\n      for (let i = 0; i < 6; i++){\r\n        const random = Math.random()\r\n        const bit = (random * 16) | 0\r\n        color += (bit).toString(16)\r\n      }\r\n      return color\r\n    }\r\n  },\r\n  watch:{\r\n    currentNode(){\r\n      console.log (this.currentNode)\r\n      this.updateNodeFolder(this.currentNode)\r\n    }\r\n  },\r\n  computed:{\r\n    currentNode:{\r\n      get () { return this.$store.state.app.currentNode },\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    },\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ui.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Ui.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Ui.vue?vue&type=template&id=7de562bc&\"\nimport script from \"./Ui.vue?vue&type=script&lang=js&\"\nexport * from \"./Ui.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// https://json-ld.org/playground/#startTab=tab-compacted&json-ld=%7B%22%40context%22%3A%7B%22base%22%3A%22https%3A%2F%2Fscenaristeur.github.io%2Fverbhse%23%22%2C%22ve%22%3A%22https%3A%2F%2Fscenaristeur.github.io%2Fverse%23%22%2C%22id%22%3A%22%40id%22%2C%22type%22%3A%22%40type%22%7D%2C%22ve%3Aname%22%3A%22Application%20Verse%22%2C%22ve%3Aage%22%3A%22-5%22%2C%22ve%3Aproperties%22%3A%5B%7B%22ve%3Aname%22%3A%22Am%C3%A9lioration%22%2C%22ve%3Avalues%22%3A%5B%7B%22ve%3Avalue%22%3A%22Trier%20par%20%C3%A2ge%22%2C%22ve%3Atype%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Afficher%20le%20nombre%20de%20texte%2Flien%2Fnodes%20sur%20la%20pr%C3%A9sentation%20accueil%20%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Aligner%20la%20saisie%20du%20champ%20texte%20%C3%A0%20droite%20car%20le%20dernier%20mot%20est%20cach%C3%A9%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Supprimer%20la%20saisie%20pr%C3%A9dictive%20sur%20le%20nom%20car%20la%20liste%20cache%20le%20clavier%20en%20%F0%9F%93%B1%20mobile%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Modifier%20la%20propri%C3%A9t%C3%A9%20%C3%A2ge%20en%20priorit%C3%A9%20%3F%20%E2%9D%93%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%7B%22name%22%3A%22Documentation%22%2C%22href%22%3A%22https%3A%2F%2Fgithub.com%2Fscenaristeur%2Fverse%22%7D%2C%22type%22%3A%22link%22%7D%2C%7B%22value%22%3A%7B%22name%22%3A%22Application%22%2C%22href%22%3A%22https%3A%2F%2Fscenaristeur.github.io%2Fverse%22%7D%2C%22type%22%3A%22link%22%7D%2C%7B%22value%22%3A%22Possibilit%C3%A9%20de%20supprimer%2C%20modifier%2C%20d%C3%A9placer%20les%20propri%C3%A9t%C3%A9s%22%2C%22type%22%3A%22textarea%22%7D%2C%7B%22value%22%3A%22Ajouter%20des%20workspaces%5CnCorrespondant%20au%20folder%20%F0%9F%93%81%20solid%22%2C%22type%22%3A%22textarea%22%7D%2C%7B%22value%22%3A%22Ajouter%20la%20fonction%20de%20tri%20des%20propri%C3%A9t%C3%A9s%20et%20des%20values%20dans%20les%20propri%C3%A9t%C3%A9s%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Trier%20par%20%C3%A2ge%20%2C%20c'est%20fait%20et%20supprimer%20la%20saisie%20auto%20aussi%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Sur%20mustupdate%2C%20lister%20les%20propri%C3%A9t%C3%A9s%2Fvalues%20qui%20diff%C3%A8rent%22%2C%22type%22%3A%22text%22%7D%2C%7B%22value%22%3A%22Deux%20groupes%20pour%20chaque%20thing%20%3A%20%5Cn-%20propri%C3%A9t%C3%A9s%20intrins%C3%A8ques%20%2C%20properties%5Cn-%20relations%20avec%20les%20autres%20thing%20%2C%20relation%5Cn-%20en%20plus%20des%20m%C3%A9tas%22%2C%22type%22%3A%22textarea%22%7D%2C%7B%22value%22%3A%22Ajouter%20la%20possibilit%C3%A9%20d'archiver%20sur%20la%20valeur%20d'une%20propri%C3%A9t%C3%A9%2C%20ou%20de%20lui%20ajouter%20un%20%C3%A2ge%2F%20statut%22%2C%22type%22%3A%22text%22%7D%5D%7D%5D%2C%22id%22%3A%22093e99bd-460a-4d69-8120-be3cc8ce2975%22%2C%22ve%3Acreated%22%3A1637614177915%2C%22ve%3Aupdated%22%3A1642665646223%2C%22ve%3Aurl%22%3A%22https%3A%2F%2Fspoggy-test5.solidcommunity.net%2Fpublic%2Fneurones%2F093e99bd-460a-4d69-8120-be3cc8ce2975%22%2C%22ve%3Asynchronized%22%3A1642665646224%2C%22ve%3Atype%22%3A%22node%22%7D&context=%7B%7D\r\n\r\nexport default\r\n{\r\n  \"@context\": {\r\n    \"as\": \"https://www.w3.org/ns/activitystreams#\",\r\n    \"ve\": \"https://scenaristeur.github.io/verse#\",\r\n    \"id\": \"@id\",\r\n    \"type\": \"@type\",\r\n    \"name\": \"ve:name\",\r\n    \"age\": \"ve:age\",\r\n    \"url\": \"ve:url\",\r\n    \"privacy\": \"ve:privacy\",\r\n    //\"type\": \"ve:type\",\r\n    \"properties\": \"ve:properties\",\r\n    \"links\": \"ve:links\",\r\n    \"synapses\": \"ve:synapses\",\r\n    \"created\": \"ve:created\",\r\n    \"updated\": \"ve:updated\",\r\n    \"synchronized\": \"ve:synchronized\"\r\n  },\r\n  \"id\": null,\r\n  \"name\": \"\" ,\r\n  \"age\": 0 ,\r\n  \"url\": \"\",\r\n  \"privacy\": 'private',\r\n  \"type\": null,\r\n  \"properties\": [],\r\n  \"links\": [],\r\n  \"synapses\": [],\r\n  \"created\": null,\r\n  \"updated\": null,\r\n  \"synchronized\": null,\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport modele from './templates/neurone1.js'\r\n\r\n\r\nexport { Base }\r\n\r\nclass Base {\r\n  constructor(options = {}) {\r\n    // this['ve:type'] = \"base\"\r\n    // loading modele\r\n    Object.assign(this, modele);\r\n    // update basic props\r\n    this.id = uuidv4()\r\n    this['type'] = \"base\"\r\n    this[\"created\"] = Date.now()\r\n    // updating with options\r\n    Object.assign(this, options);\r\n    // this.options = options\r\n\r\n    // ...\r\n  }\r\n  debug(){\r\n      console.log(this)\r\n  }\r\n}\r\n","//console.log(\"Neurone Factory\")\r\nimport { Base } from \"./base.js\"\r\n//import { Neurone } from \"./neurone.js\"\r\n\r\n\r\n\r\nexport { Brain }\r\nclass Brain extends Base {\r\n  constructor(options = {}) {\r\n    super(options)\r\n   options['type'] == undefined ? this['type'] = \"brain\": \"\"\r\n    // console.log('factice brain hihihi')\r\n  }\r\n\r\n  // createNeurone(options = {}){\r\n  //   console.log(\"create\", options)\r\n  //   let neurone = new Neurone(options)\r\n  //   return neurone\r\n  // }\r\n}\r\n","import { Base } from \"./base.js\"\r\n\r\nexport { Neurone }\r\n\r\nclass Neurone extends Base {\r\n  constructor(options = {}) {\r\n    super(options)\r\n    options['type'] == undefined ? this['type'] = \"neurone\": \"\"\r\n    // this.options = options\r\n\r\n    // this._data = Object.assign({}, modele)\r\n    // this[\"ve:created\"] = Date.now()\r\n    // this.id = uuidv4()\r\n    //console.log(this)\r\n    // ...\r\n  }\r\n}\r\n","\r\nimport { Base } from \"./base.js\"\r\n\r\nexport { Command }\r\n\r\nclass Command extends Base {\r\n  constructor(options = {}) {\r\n    super(options)\r\n    options['type'] == undefined ? this['type'] = \"command\": \"\"\r\n    // this.options = options\r\n\r\n    // this._data = Object.assign({}, modele)\r\n    // this[\"ve:created\"] = Date.now()\r\n    // this.id = uuidv4()\r\n    //console.log(this)\r\n    // ...\r\n    this.init(options.inputValue)\r\n  }\r\n  init(iv){\r\n    // si commence par http --> type = url\r\n  if (this.isValidUrl(iv)){\r\n    this.type = \"url\";\r\n    this.value = iv;\r\n    this.isFile = this.isFile(iv)\r\n  }else{\r\n    // selon le premier charactère, on detecte une commande\r\n    let firstChar = iv.charAt(0);\r\n    let last =\"\"\r\n    switch(firstChar){\r\n      case '/':\r\n      //    let commande = rdf.quad(rdf.blankNode(), rdf.namedNode('commande'),rdf.literal(message))\r\n      //  this.catchCommande(message,this.network,this);\r\n\r\n      this.type = \"commande\";\r\n      this.value = iv;\r\n      this.inputNew = \"\";\r\n      //this.catchCommande(this)\r\n      break;\r\n\r\n      case '.':\r\n      last = this.commandHistory[this.commandHistory.length-1];\r\n      this.inputNew = last.s+\" \"+last.p+\" \"+last.o;\r\n      break;\r\n\r\n      case ';':\r\n      last = this.commandHistory[this.commandHistory.length-1];\r\n      this.inputNew = last.s+\" \"+last.p+\" \";\r\n      break;\r\n\r\n      case ',':\r\n      last = this.commandHistory[this.commandHistory.length-1];\r\n      this.inputNew = last.s+\" \";\r\n      break;\r\n\r\n\r\n      default:\r\n      // si le premier charactère n'indique pas une commande, on traite comme un triplet\r\n      this.traiteTriplet(iv);\r\n    //  this.catchTriplet()\r\n    }\r\n  }\r\n\r\n  //si termine par virgule, point, point-virgule, tiret --> triplet\r\n\r\n  return this;\r\n  }\r\n\r\n  traiteTriplet(message){\r\n  var result = {}\r\n  var inputNew = \"\";\r\n  let lastChar = message.slice(-1);\r\n  let messageCut = message.slice(0,-1).split(\" \");\r\n  let isTriplet = true;\r\n  //  console.log(messageCut);\r\n\r\n  let detectLiteral = \"\";\r\n  let messageCutTemp = [];\r\n  messageCut.forEach(function(part){\r\n    part = part.trim();\r\n    //  console.log(part);\r\n    if (part.startsWith('\"')){\r\n      detectLiteral =\"debut\";\r\n      //  console.log(detectLiteral);\r\n      messageCutTemp.push(part.substr(1));\r\n    }else if (part.endsWith('\"')){\r\n      detectLiteral = \"fin\";\r\n      //console.log(detectLiteral);\r\n      messageCutTemp.push(messageCutTemp.pop()+\" \"+part.slice(0,-1));\r\n    }else if (detectLiteral == \"debut\"){\r\n      //  console.log(\"recupere le dernier et lui ajoute part\" )\r\n      messageCutTemp.push(messageCutTemp.pop()+\" \"+part)\r\n    }else {\r\n      messageCutTemp.push(part);\r\n    }\r\n  });\r\n  if (messageCutTemp.length > 0){\r\n    messageCut = messageCutTemp;\r\n  }\r\n  switch(lastChar){\r\n    case '.':\r\n    inputNew = \"\";\r\n    break;\r\n    case ';':\r\n    if (messageCut[0].indexOf(\" \") > -1){\r\n      inputNew = '\"'+messageCut[0]+'\"'+' ';\r\n    }else{\r\n      inputNew = messageCut[0]+' ';\r\n    }\r\n    break;\r\n    case ',':\r\n    if (messageCut[0].indexOf(\" \") > -1){\r\n      inputNew = '\"'+messageCut[0]+'\" ';\r\n    }else{\r\n      inputNew = messageCut[0]+' ';\r\n    }\r\n    if (messageCut[1].indexOf(\" \") > -1){\r\n      inputNew += '\"'+messageCut[1]+'\" ';\r\n    }else{\r\n      inputNew += messageCut[1]+' ';\r\n    }\r\n    break;\r\n    case '-':\r\n    if (messageCut[2].indexOf(\" \") > -1){\r\n      inputNew = '\"'+messageCut[2]+'\"'+' ';\r\n    }else{\r\n      inputNew = messageCut[2]+' ';\r\n    }\r\n    break;\r\n    default:\r\n    console.log(\"message to chat \"+message)\r\n    //this.sendMessage(message);\r\n    //  this.agentInput.send('agentSocket', {type: \"sendMessage\", message:message});\r\n    //  this.catchTriplet(message.slice(0,-1), this.network); // A REMPLACER PAR CATCHTRIPLETS V2\r\n    inputNew = \"\";\r\n    isTriplet = false;\r\n  }\r\n  if (isTriplet){\r\n    //  console.log(\"est Triplet\",messageCut)\r\n    result.type = \"triplet\";\r\n    var tripletvalue = {};\r\n    tripletvalue.subject = messageCut[0];\r\n    tripletvalue.predicate = messageCut[1];\r\n    tripletvalue.object = messageCut[2];\r\n    result.value = tripletvalue;\r\n    result.inputNew = inputNew;\r\n  }else {\r\n    //  console.log(\"n'est pas triplet\")\r\n    result.type = \"message\";\r\n    result.value = message;\r\n    result.inputNew = inputNew;\r\n  }\r\nObject.assign(this, result);\r\n//  return result;\r\n}\r\n  isValidUrl(string){\r\n    try {\r\n      new URL(string);\r\n      return true;\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  }\r\n  isFile(pathname) {\r\n    return pathname.split('/').pop().indexOf('.') > -1;\r\n  }\r\n}\r\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticStyle","attrs","on","addField","field","model","value","callback","$$v","$set","expression","_e","brainName","newBrain","_v","_l","brain","key","id","$event","switchBrain","_s","name","staticRenderFns","props","data","brains","clearing","fieldType","show","currentProp","newValue","link","permissions","mounted","guiDiv","$refs","gui","GUI","autoPlace","appendChild","domElement","buildGuiTools","methods","updateNodeFolder","nodeFolder","removeFolder","lignes","openProperties","openLinks","addFolder","console","log","currentNode","undefined","age","privacy","add","created","app","nodeColor","addColor","onChange","color","replace","open","addValue","buildGuiNode","message","messageLink","speed","propsFolder","linksFolder","testsub","openBrains","newNeurone","resetCamera","toolFolder","buildGuiTest","geometry","material","wireframe","cube","Graph","scene","text","displayOutline","cubeFolder","rotation","Math","PI","cubeColor","$bvModal","newProperty","category","p","values","index","findIndex","x","push","alert","newLink","$gunGet","b","$emit","node","type","nodes","cameraPosition","y","z","randomColor","i","random","bit","watch","computed","get","set","component","Base","constructor","options","Object","assign","modele","uuidv4","Date","now","debug","Brain","super","Neurone","Command","init","inputValue","iv","isValidUrl","isFile","firstChar","charAt","last","inputNew","commandHistory","length","s","o","traiteTriplet","result","lastChar","slice","messageCut","split","isTriplet","detectLiteral","messageCutTemp","forEach","part","trim","startsWith","substr","endsWith","pop","indexOf","tripletvalue","subject","predicate","object","string","URL","_","pathname"],"sourceRoot":""}