{"version":3,"file":"js/692.0b0b2cbb.js","mappings":"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","sources":["webpack://agents/./src/components/directed/Visu.vue?c7a1","webpack://agents/src/components/directed/Visu.vue","webpack://agents/./src/components/directed/Visu.vue?2c1d","webpack://agents/./src/components/directed/Visu.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.paths.length>0)?_c('div',[_vm._v(\"Exploring \"+_vm._s(_vm.paths.length)+\" paths. \")]):_vm._e(),_c('CommandInput'),_c('Graph',{attrs:{\"nodes\":_vm.nodes,\"links\":_vm.links}}),_c('Node'),_vm._v(\" \"+_vm._s(_vm.pod)+\" \")],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n\n    <div v-if=\"paths.length>0\">Exploring {{ paths.length }} paths.\n      <!-- <div v-if=\"paths.length <3\"> {{ paths}}</div> -->\n    </div>\n    <CommandInput />\n    <Graph :nodes=\"nodes\" :links=\"links\" />\n    <Node />\n    {{ pod }}\n    <!-- <Comunica /> -->\n    <!-- <Hello /> -->\n  </div>\n</template>\n\n<script>\n// import externalComponent from '@/utils/external-component';\n//\n// const Hello = () => externalComponent('https://components.solidcommunity.net/public/hello/Hello.bdd71b8bbb487af4de05.umd.min.js');\n\n// import { v4 as uuidv4 } from 'uuid';\nexport default {\n  name: \"Visu\",\n  components: {\n    // 'ThreeScene': () => import('@/components/three/ThreeScene'),\n    'Graph': () => import('@/components/directed/Graph'),\n    // 'Comunica': () => import('@/components/dev/Comunica'),\n    'CommandInput': () => import('@/components/directed/CommandInput'),\n    'Node': () => import('@/components/ui/Node'),\n\n    // Hello\n    // HelloWorld\n  },\n  data(){\n    return{\n      //  nodes: [],\n      links: [],\n      paths: [],\n      jump: 0\n\n    }\n  },\n  created(){\n    console.log(\"MUST TAKE A LOOK AT COMMUNICA !\")\n  },\n  methods: {\n    async explore2(path){\n      console.log(path)\n\n    },\n    onInputObjectChange(data){\n      console.log(\"onCommand\",data)\n      let nodeSubject, nodeObject, edge\n      switch (data.type) {\n        case 'triplet':\n        nodeSubject = this.nodeFromLabel(data.value.subject)\n        this.saveNode(nodeSubject)\n        nodeObject = this.nodeFromLabel(data.value.object)\n        this.saveNode(nodeObject)\n        console.log(nodeSubject.id, nodeObject.id)\n        edge = this.edgeFromLabel({source: nodeSubject.id, target: nodeObject.id, label: data.value.predicate})\n        console.log(edge)\n        this.saveEdge(edge)\n        data.triple = {subject: nodeSubject, edge: edge, object: nodeObject}\n        this.$saveToGun(data)\n        break;\n        case 'url':\n        console.log(data)\n        break;\n        default:\n        console.log(\"TODO\",data)\n      }\n    },\n    saveNode(n){\n      var index = this.nodes.findIndex(x => x.id==n.id);\n      index === -1 ? this.nodes.push(n) : Object.assign(this.nodes[index], n)\n      this.sendUpdate(n)\n    },\n    saveEdge(e){\n      console.log(e)\n      console.log(this.links)\n      this.links.push(e)\n      //  var index = this.links.findIndex(x => x.id==e.id);\n      //index === -1 ? this.links.push(e) : Object.assign(this.links[index], e)\n      console.log(this.nodes, this.links)\n      this.sendUpdate(e)\n    },\n    // nodeFromLabelVis(label) {\n    //   return {id: \"#\"+label.trim().split(' ').join('_'),\n    //   label: label,\n    //   color: {  background: '#D2E5FF', border: '#2B7CE9'},\n    //   shape: 'ellipse'}\n    // },\n    nodeFromLabel(label) {\n      let id = \"#\"+label.trim().split(' ').join('_')\n      return {id: id , name: label,   age: 0,\n        type: \"neurone\"/*, color: \"#D2E5FF\"*//*, type: \"storage\"*/}\n      },\n      edgeFromLabel(data){\n        console.log(data)\n        return { source: data.source, target: data.target, label: data.label}\n      },\n      // edgeFromLabelVis(data){\n      //   return { from: data.from, to: data.to, label: data.label}\n      // },\n      async sendUpdate(p){\n        console.log(p)\n        //  console.log(this.url)\n        //  console.log(this.network)\n        console.log(\"le json\", this.json)\n\n\n        // if(this.json != undefined && this.json[\"@context\"] != \"https://data.virtual-assembly.org/context.json\"){\n        //   console.log(\"TODO must send only if different \")\n        //   let identiques = this.arraysEqual(this.json.nodes, this.network.nodes) && this.arraysEqual(this.json.edges, this.network.edges)\n        //   console.log(\"identiques\",identiques)\n        //   if (identiques == false && this.url != undefined){\n        //     this.json.nodes = this.network.nodes\n        //     this.json.edges = this.network.edges\n        //     this.json.modified = new Date()\n        //     console.log(this.json)\n        //\n        //     await fc.createFile( this.json.url, JSON.stringify(this.json), \"application/ld+json\" ).then(\n        //       f => {\n        //         console.log(f)\n        //       });\n        //     }\n        //   }\n\n      },\n      async exploreFriends(pod){\n        let app = this\n        app.jump ++\n\n        pod.friends.forEach(async function(f){\n          console.log(f)\n          try{\n            if (f.webId != undefined){\n              let friendNode = {url: f.webId, name: f.webId, type: \"friend\", color: \"#00ff00\", webId: f.webId}\n              console.log(friendNode)\n              let p = await app.$getPodInfos(friendNode)\n              console.log(p)\n              let exist = app.nodes.find(x => x.url == friendNode.url)\n              console.log(\"exist\", exist)\n              exist == undefined ? app.nodes.push(friendNode) : \"\"\n              // app.nodes.push(friendNode)\n              app.links.push({source: pod.webId, target: f.webId, label: \"friend\"})\n              let storageNode = {url: p.storage, name: \"storage\", color: \"#ffff00\", type: \"storage\"}\n              app.nodes.push(storageNode)\n              app.links.push({source: f.webId, target: p.storage, label: \"storage\"})\n              console.log(app.jump)\n            }{\n              console.log(\"webId undefined\", f.webId)\n            }\n            // if (app.jump <4){\n            //   app.exploreFriends(p)\n            // }\n          }catch(e){\n            console.log(e)\n          }\n          //   try{\n          //   let friendNode = {url: f.webId, name: f.webId, type: \"friend\", color: \"#00ff00\", webId: f.webId}\n          //   app.nodes.push(friendNode)\n          //   app.links.push({source: pod.webId, target: f.webId, label: \"friend\"})\n          //\n          //\n          //   let p = await app.$getPodInfos(friendNode)\n          //   console.log(p)\n          //   let storageNode = {url: p.storage, name: \"storage\", color: \"#ffff00\", type: \"storage\"}\n          //   app.nodes.push(storageNode)\n          //   app.links.push({source: f.webId, target: p.storage, label: \"storage\"})\n          //   //   app.explore(p.storage)\n          //\n          //   if (app.jump <7){\n          //     app.exploreFriends(p)\n          //\n          //\n          //   }\n          // }catch(e){\n          //   console.log(e)\n          // }\n\n\n\n\n          // let f_pod = {webId: f}\n          // console.log(f)\n          // let pod = await app.$getPodInfos(f_pod)\n          // console.log(\"Friend\", pod)\n        })\n      },\n      async explore(path){\n        console.log(path)\n        if (path.endsWith('card#me')){\n          let p = await this.$getPodInfos({webId: path})\n          path = p.storage\n          this.exploreFriends(p)\n        }\n        let app = this\n        let resources = await this.$getResources(path)\n        resources.forEach(async function(r){\n\n          if(r.type == \"file\"){\n            await app.$getResource(r)\n          }\n          console.log(r)\n          app.nodes.push(r)\n          app.links.push({source: path, target: r.url})\n          // if (r.url.endsWith('/')){\n          //   app.explore(r.url)\n          // }\n\n        })\n      },\n\n      async explore1(path){\n        this.paths.push(path)\n        //  console.log(\"explore\", path)\n        let resources = await this.$getResources(path)\n        console.log(resources)\n        let app = this\n        resources.forEach(function(r){\n          if (r.type == \"folder\"){\n            app.explore(r.url)\n          }else if(r.url.endsWith('.jsonld') || r.file.type == \"application/ld+json\"){\n            r.color = \"#ffff00\"\n            const reader = new FileReader();\n            reader.onload = async () => {\n              //  console.log(reader.result)\n              r.jsonld = JSON.parse(reader.result)\n              r.name = r.jsonld[\"name\"]\n              console.log(\"jsonld\",r.jsonld['properties'])\n              for (const p of r.jsonld['properties']){\n                console.log(p)\n                for (const v of p.values){\n                  console.log(v)\n                }\n\n              }\n              // if (getContentType(file) == 'application+json'){\n              //   content = JSON.parse(reader.result);\n              // }\n              // console.log(\"content\",content)\n              // store.commit('bureau/setContent',content)\n            };\n            reader.onerror = (error) => {\n              console.log(error);\n            };\n            reader.readAsText(r.file);\n\n\n          }else if(r.url.endsWith('.ttl')){\n            r.color = \"#00ff00\"\n          }\n          if(r.name == \"inbox\"){\n            r.color = \"#ffffff\"\n          }\n          app.nodes.push(r)\n          app.links.push({source: path, target: r.url})\n\n        })\n        this.paths = this.paths.filter(e => e !== path);\n      }\n    },\n    watch:{\n      async pod(){\n        if (this.pod != null){\n          console.log(this.pod)\n          //  let app = this\n          let storageNode = {url: this.pod.storage, name: \"storage\", color: \"#ffff00\", type: \"storage\"}\n          this.nodes.push(storageNode)\n          let webIdNode = {url: this.pod.webId, name: this.pod.name || this.pod.webId, color: \"#ff0000\", type: \"webId\"}\n          this.nodes.push(webIdNode)\n          this.links.push({source: this.pod.webId, target: this.pod.storage, label: \"storage\"})\n          this.explore(this.pod.storage)\n          this.exploreFriends(this.pod)\n        }else{\n          this.nodes = []\n          this.links = []\n        }\n\n      },\n      mustExplore(){\n        if(this.mustExplore != null){\n          console.log(\"mustExplore\", this.mustExplore)\n          let exist = this.nodes.find(x => x.url = this.mustExplore)\n          let url = this.mustExplore\n          console.log(\"exist ? \", exist)\n          exist ==  undefined ? this.nodes.push({url:url, name: url, color: \"#ff00ff\", type: \"storage\"}) : \"\"\n          this.explore(this.mustExplore)\n        }\n      },\n      inputObject(){\n        this.onInputObjectChange(this.inputObject)\n      },\n      nodes(){\n        console.log(\"local nodes\", this.nodes)\n        this.nodes.forEach((node) => {\n          console.log(node.id, node.name, node.url)\n        });\n\n      }\n    },\n    computed:{\n      pod:{\n        get () { return this.$store.state.solid.pod },\n        set (/*value*/) { /*this.updateTodo(value)*/ }\n      },\n      mustExplore:{\n        get () { return this.$store.state.app.mustExplore },\n        set (/*value*/) { /*this.updateTodo(value)*/ }\n      },\n      inputObject: {\n        get () { return this.$store.state.app.inputObject},\n        set (/*value*/) { /*this.updateTodo(value)*/ }\n      },\n      nodes:{\n        get () { return this.$store.state.nodes.nodes },\n        set (/*value*/) { /*this.updateTodo(value)*/ }\n      }\n    }\n  }\n  </script>\n\n  <style>\n\n  </style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Visu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Visu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Visu.vue?vue&type=template&id=59e79c18&\"\nimport script from \"./Visu.vue?vue&type=script&lang=js&\"\nexport * from \"./Visu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","paths","length","_v","_s","_e","attrs","nodes","links","pod","staticRenderFns","name","components","data","jump","created","console","log","methods","async","path","onInputObjectChange","nodeSubject","nodeObject","edge","type","source","target","label","subject","object","saveNode","n","index","findIndex","x","id","push","Object","assign","sendUpdate","saveEdge","e","nodeFromLabel","age","edgeFromLabel","app","url","color","webId","exist","resources","r","reader","watch","computed","mustExplore","inputObject","component"],"sourceRoot":""}