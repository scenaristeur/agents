{"version":3,"file":"js/830.06d6bdb0.js","mappings":"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","sources":["webpack://agents/./src/components/directed/Visu.vue?d6c6","webpack://agents/src/components/directed/Visu.vue","webpack://agents/./src/components/directed/Visu.vue?2c1d","webpack://agents/./src/components/directed/Visu.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.paths.length>0)?_c('div',[_vm._v(\"Exploring \"+_vm._s(_vm.paths.length)+\" paths. \")]):_vm._e(),_c('CommandInput'),_c('Graph',{attrs:{\"nodes\":_vm.nodes,\"links\":_vm.links}}),_vm._v(\" \"+_vm._s(_vm.pod)+\" \")],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n\r\n    <div v-if=\"paths.length>0\">Exploring {{ paths.length }} paths.\r\n      <!-- <div v-if=\"paths.length <3\"> {{ paths}}</div> -->\r\n    </div>\r\n    <CommandInput />\r\n    <Graph :nodes=\"nodes\" :links=\"links\" />\r\n    {{ pod }}\r\n    <!-- <Comunica /> -->\r\n    <!-- <Hello /> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import externalComponent from '@/utils/external-component';\r\n//\r\n// const Hello = () => externalComponent('https://components.solidcommunity.net/public/hello/Hello.bdd71b8bbb487af4de05.umd.min.js');\r\n\r\n// import { v4 as uuidv4 } from 'uuid';\r\nexport default {\r\n  name: \"Visu\",\r\n  components: {\r\n    // 'ThreeScene': () => import('@/components/three/ThreeScene'),\r\n    'Graph': () => import('@/components/directed/Graph'),\r\n    // 'Comunica': () => import('@/components/dev/Comunica'),\r\n    'CommandInput': () => import('@/components/directed/CommandInput'),\r\n\r\n    // Hello\r\n    // HelloWorld\r\n  },\r\n  data(){\r\n    return{\r\n    //  nodes: [],\r\n      links: [],\r\n      paths: [],\r\n      jump: 0\r\n\r\n    }\r\n  },\r\n  created(){\r\n    console.log(\"MUST TAKE A LOOK AT COMMUNICA !\")\r\n  },\r\n  methods: {\r\n    async explore2(path){\r\n      console.log(path)\r\n\r\n    },\r\n    onInputObjectChange(data){\r\n      console.log(\"onCommand\",data)\r\n      let nodeSubject, nodeObject, edge\r\n      switch (data.type) {\r\n        case 'triplet':\r\n        nodeSubject = this.nodeFromLabel(data.value.subject)\r\n        this.saveNode(nodeSubject)\r\n        nodeObject = this.nodeFromLabel(data.value.object)\r\n        this.saveNode(nodeObject)\r\n        console.log(nodeSubject.id, nodeObject.id)\r\n        edge = this.edgeFromLabel({source: nodeSubject.id, target: nodeObject.id, label: data.value.predicate})\r\n        console.log(edge)\r\n        this.saveEdge(edge)\r\n        data.triple = {subject: nodeSubject, edge: edge, object: nodeObject}\r\n        this.$saveToGun(data)\r\n        break;\r\n        case 'url':\r\n        console.log(data)\r\n        break;\r\n        default:\r\n        console.log(\"TODO\",data)\r\n      }\r\n    },\r\n    saveNode(n){\r\n      var index = this.nodes.findIndex(x => x.id==n.id);\r\n      index === -1 ? this.nodes.push(n) : Object.assign(this.nodes[index], n)\r\n      this.sendUpdate(n)\r\n    },\r\n    saveEdge(e){\r\n      console.log(e)\r\n      console.log(this.links)\r\n      this.links.push(e)\r\n      //  var index = this.links.findIndex(x => x.id==e.id);\r\n      //index === -1 ? this.links.push(e) : Object.assign(this.links[index], e)\r\n      console.log(this.nodes, this.links)\r\n      this.sendUpdate(e)\r\n    },\r\n    // nodeFromLabelVis(label) {\r\n    //   return {id: \"#\"+label.trim().split(' ').join('_'),\r\n    //   label: label,\r\n    //   color: {  background: '#D2E5FF', border: '#2B7CE9'},\r\n    //   shape: 'ellipse'}\r\n    // },\r\n    nodeFromLabel(label) {\r\n     let id = \"#\"+label.trim().split(' ').join('_')\r\n      return {id: id , name: label,   age: 0,\r\n        type: \"neurone\"/*, color: \"#D2E5FF\"*//*, type: \"storage\"*/}\r\n    },\r\n    edgeFromLabel(data){\r\n      console.log(data)\r\n      return { source: data.source, target: data.target, label: data.label}\r\n    },\r\n    // edgeFromLabelVis(data){\r\n    //   return { from: data.from, to: data.to, label: data.label}\r\n    // },\r\n    async sendUpdate(p){\r\n      console.log(p)\r\n    //  console.log(this.url)\r\n      //  console.log(this.network)\r\n      console.log(\"le json\", this.json)\r\n\r\n\r\n      // if(this.json != undefined && this.json[\"@context\"] != \"https://data.virtual-assembly.org/context.json\"){\r\n      //   console.log(\"TODO must send only if different \")\r\n      //   let identiques = this.arraysEqual(this.json.nodes, this.network.nodes) && this.arraysEqual(this.json.edges, this.network.edges)\r\n      //   console.log(\"identiques\",identiques)\r\n      //   if (identiques == false && this.url != undefined){\r\n      //     this.json.nodes = this.network.nodes\r\n      //     this.json.edges = this.network.edges\r\n      //     this.json.modified = new Date()\r\n      //     console.log(this.json)\r\n      //\r\n      //     await fc.createFile( this.json.url, JSON.stringify(this.json), \"application/ld+json\" ).then(\r\n      //       f => {\r\n      //         console.log(f)\r\n      //       });\r\n      //     }\r\n      //   }\r\n\r\n    },\r\n    async exploreFriends(pod){\r\n      let app = this\r\n      app.jump ++\r\n\r\n      pod.friends.forEach(async function(f){\r\n        console.log(f)\r\n        try{\r\n          if (f.webId != undefined){\r\n            let friendNode = {url: f.webId, name: f.webId, type: \"friend\", color: \"#00ff00\", webId: f.webId}\r\n            console.log(friendNode)\r\n            let p = await app.$getPodInfos(friendNode)\r\n            console.log(p)\r\n            let exist = app.nodes.find(x => x.url == friendNode.url)\r\n            console.log(\"exist\", exist)\r\n            exist == undefined ? app.nodes.push(friendNode) : \"\"\r\n            // app.nodes.push(friendNode)\r\n            app.links.push({source: pod.webId, target: f.webId, label: \"friend\"})\r\n            let storageNode = {url: p.storage, name: \"storage\", color: \"#ffff00\", type: \"storage\"}\r\n            app.nodes.push(storageNode)\r\n            app.links.push({source: f.webId, target: p.storage, label: \"storage\"})\r\n            console.log(app.jump)\r\n          }{\r\n            console.log(\"webId undefined\", f.webId)\r\n          }\r\n          // if (app.jump <4){\r\n          //   app.exploreFriends(p)\r\n          // }\r\n        }catch(e){\r\n          console.log(e)\r\n        }\r\n        //   try{\r\n        //   let friendNode = {url: f.webId, name: f.webId, type: \"friend\", color: \"#00ff00\", webId: f.webId}\r\n        //   app.nodes.push(friendNode)\r\n        //   app.links.push({source: pod.webId, target: f.webId, label: \"friend\"})\r\n        //\r\n        //\r\n        //   let p = await app.$getPodInfos(friendNode)\r\n        //   console.log(p)\r\n        //   let storageNode = {url: p.storage, name: \"storage\", color: \"#ffff00\", type: \"storage\"}\r\n        //   app.nodes.push(storageNode)\r\n        //   app.links.push({source: f.webId, target: p.storage, label: \"storage\"})\r\n        //   //   app.explore(p.storage)\r\n        //\r\n        //   if (app.jump <7){\r\n        //     app.exploreFriends(p)\r\n        //\r\n        //\r\n        //   }\r\n        // }catch(e){\r\n        //   console.log(e)\r\n        // }\r\n\r\n\r\n\r\n\r\n        // let f_pod = {webId: f}\r\n        // console.log(f)\r\n        // let pod = await app.$getPodInfos(f_pod)\r\n        // console.log(\"Friend\", pod)\r\n      })\r\n    },\r\n    async explore(path){\r\n      console.log(path)\r\n      if (path.endsWith('card#me')){\r\n        let p = await this.$getPodInfos({webId: path})\r\n        path = p.storage\r\n        this.exploreFriends(p)\r\n      }\r\n      let app = this\r\n      let resources = await this.$getResources(path)\r\n      resources.forEach(async function(r){\r\n\r\n        if(r.type == \"file\"){\r\n          await app.$getResource(r)\r\n        }\r\n          console.log(r)\r\n        app.nodes.push(r)\r\n        app.links.push({source: path, target: r.url})\r\n        // if (r.url.endsWith('/')){\r\n        //   app.explore(r.url)\r\n        // }\r\n\r\n      })\r\n    },\r\n\r\n    async explore1(path){\r\n      this.paths.push(path)\r\n      //  console.log(\"explore\", path)\r\n      let resources = await this.$getResources(path)\r\n      console.log(resources)\r\n      let app = this\r\n      resources.forEach(function(r){\r\n        if (r.type == \"folder\"){\r\n          app.explore(r.url)\r\n        }else if(r.url.endsWith('.jsonld') || r.file.type == \"application/ld+json\"){\r\n          r.color = \"#ffff00\"\r\n          const reader = new FileReader();\r\n          reader.onload = async () => {\r\n            //  console.log(reader.result)\r\n            r.jsonld = JSON.parse(reader.result)\r\n            r.name = r.jsonld[\"name\"]\r\n            console.log(\"jsonld\",r.jsonld['properties'])\r\n            for (const p of r.jsonld['properties']){\r\n              console.log(p)\r\n              for (const v of p.values){\r\n                console.log(v)\r\n              }\r\n\r\n            }\r\n            // if (getContentType(file) == 'application+json'){\r\n            //   content = JSON.parse(reader.result);\r\n            // }\r\n            // console.log(\"content\",content)\r\n            // store.commit('bureau/setContent',content)\r\n          };\r\n          reader.onerror = (error) => {\r\n            console.log(error);\r\n          };\r\n          reader.readAsText(r.file);\r\n\r\n\r\n        }else if(r.url.endsWith('.ttl')){\r\n          r.color = \"#00ff00\"\r\n        }\r\n        if(r.name == \"inbox\"){\r\n          r.color = \"#ffffff\"\r\n        }\r\n        app.nodes.push(r)\r\n        app.links.push({source: path, target: r.url})\r\n\r\n      })\r\n      this.paths = this.paths.filter(e => e !== path);\r\n    }\r\n  },\r\n  watch:{\r\n    async pod(){\r\n      if (this.pod != null){\r\n        console.log(this.pod)\r\n        //  let app = this\r\n        let storageNode = {url: this.pod.storage, name: \"storage\", color: \"#ffff00\", type: \"storage\"}\r\n        this.nodes.push(storageNode)\r\n        let webIdNode = {url: this.pod.webId, name: this.pod.name || this.pod.webId, color: \"#ff0000\", type: \"webId\"}\r\n        this.nodes.push(webIdNode)\r\n        this.links.push({source: this.pod.webId, target: this.pod.storage, label: \"storage\"})\r\n        this.explore(this.pod.storage)\r\n        this.exploreFriends(this.pod)\r\n      }else{\r\n        this.nodes = []\r\n        this.links = []\r\n      }\r\n\r\n    },\r\n    mustExplore(){\r\n      if(this.mustExplore != null){\r\n        console.log(\"mustExplore\", this.mustExplore)\r\n        let exist = this.nodes.find(x => x.url = this.mustExplore)\r\n        let url = this.mustExplore\r\n        console.log(\"exist ? \", exist)\r\n        exist ==  undefined ? this.nodes.push({url:url, name: url, color: \"#ff00ff\", type: \"storage\"}) : \"\"\r\n        this.explore(this.mustExplore)\r\n      }\r\n    },\r\n    inputObject(){\r\n      this.onInputObjectChange(this.inputObject)\r\n    },\r\n    nodes(){\r\n      console.log(\"local nodes\", this.nodes)\r\n      this.nodes.forEach((node) => {\r\n        console.log(node.id, node.name, node.url)\r\n      });\r\n\r\n    }\r\n  },\r\n  computed:{\r\n    pod:{\r\n      get () { return this.$store.state.solid.pod },\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    },\r\n    mustExplore:{\r\n      get () { return this.$store.state.app.mustExplore },\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    },\r\n    inputObject: {\r\n      get () { return this.$store.state.app.inputObject},\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    },\r\n    nodes:{\r\n      get () { return this.$store.state.nodes.nodes },\r\n      set (/*value*/) { /*this.updateTodo(value)*/ }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Visu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Visu.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Visu.vue?vue&type=template&id=9a850834&\"\nimport script from \"./Visu.vue?vue&type=script&lang=js&\"\nexport * from \"./Visu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","paths","length","_v","_s","_e","attrs","nodes","links","pod","staticRenderFns","name","components","data","jump","created","console","log","methods","async","path","onInputObjectChange","nodeSubject","nodeObject","edge","type","source","target","label","subject","object","saveNode","n","index","findIndex","x","id","push","Object","assign","sendUpdate","saveEdge","e","nodeFromLabel","age","edgeFromLabel","p","json","app","friends","forEach","f","undefined","webId","friendNode","url","color","$getPodInfos","exist","find","storageNode","endsWith","storage","exploreFriends","resources","$getResources","$getResource","r","explore","reader","FileReader","onload","jsonld","JSON","parse","result","v","values","onerror","error","readAsText","file","filter","watch","webIdNode","mustExplore","inputObject","node","computed","get","set","component"],"sourceRoot":""}