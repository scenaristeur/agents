{"version":3,"file":"js/187.33e011e9.js","mappings":"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","sources":["webpack://agents/./src/components/GunTest.vue?70cc","webpack://agents/src/components/GunTest.vue","webpack://agents/./src/components/GunTest.vue?5148","webpack://agents/./src/components/GunTest.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\" Gun test \"),_c('b-input',{attrs:{\"placeholder\":\"type a command and press enter\"},on:{\"change\":function($event){return _vm.command()}},model:{value:(_vm.command_input),callback:function ($$v) {_vm.command_input=$$v},expression:\"command_input\"}}),_c('h3',[_vm._v(\"Some possible commands\")]),_vm._m(0),_vm._v(\" Result : \"+_vm._s(_vm.last)+\" \"),_c('b-input',{model:{value:(_vm.newDo),callback:function ($$v) {_vm.newDo=$$v},expression:\"newDo\"}}),_c('b-button',{on:{\"click\":_vm.add}},[_vm._v(\"Add\")]),_c('ul',_vm._l((_vm.todos),function(node,key){return _c('li',{key:key},[_vm._v(\" \"+_vm._s(key)+\" : \"+_vm._s(node.title || node.GrosTitre))])}),0),_c('b-form-textarea',{attrs:{\"id\":\"textarea\",\"placeholder\":\"Enter something...\",\"rows\":\"3\",\"max-rows\":\"6\"},on:{\"input\":_vm.updateText},model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"my.object.name = truc\")]),_c('li',[_vm._v(\"cat my.object.name\")]),_c('li',[_vm._v(\"my.object.test = {\\\"og\\\": \\\"gro\\\", \\\"trif\\\": \\\"gr\\\", \\\"gft\\\": 5}\")]),_c('li',[_vm._v(\"cat my.object.test.og\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    Gun test\n    <b-input @change=\"command()\" v-model=\"command_input\" placeholder=\"type a command and press enter\" />\n    <h3>Some possible commands</h3>\n    <ul>\n      <li>my.object.name = truc</li>\n      <li>cat my.object.name</li>\n      <li>my.object.test = {\"og\": \"gro\", \"trif\": \"gr\", \"gft\": 5}</li>\n      <li>cat my.object.test.og</li>\n    </ul>\n\n    Result : {{last}}\n\n    <b-input v-model=\"newDo\" />\n    <b-button @click=\"add\">Add</b-button>\n    <!-- todos : {{ todos }} -->\n    <ul>\n      <li v-for=\"(node, key) of todos\" :key=\"key\"> {{ key }} : {{node.title || node.GrosTitre}}</li>\n    </ul>\n\n    <b-form-textarea\n    id=\"textarea\"\n    v-model=\"text\"\n    placeholder=\"Enter something...\"\n    rows=\"3\"\n    max-rows=\"6\"\n    @input=\"updateText\"\n    ></b-form-textarea>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"GunTest\",\n  data(){\n    return{\n      todos : {},\n      newDo: \"\",\n      command_input: \"\",\n      last: {key: \"\", value: \"\"},\n      text: \"\"\n    }\n  },\n  mounted: function() {\n    // let app = this\n      var newline = String.fromCharCode(13, 10);\n    // this.todos = this.$gun.get('todos')\n    this.$gun.get('todos').map().on((node, key) => {\n\n      // add results straight to the Vue component state\n      // and get updates when nodes are updated by GUN\n      this.todos[key] = node;\n    //  console.log(this.todos)\n    });\n\n    this.$gun.get('text').once((node) => { // Retrieve the text value on startup\n      //console.log(node)\n    this.text = node.text.replaceAll('\\\\n', newline);\n      // if(node == undefined) {\n      //   this.$gun.get('text').put({text: \"Write the text here\"})\n      // } else {\n      //   console.log(\"Found Node\")\n      //   app.text = node.text\n      // }\n    })\n\n    this.$gun.get('text').on((node) => { // Is called whenever text is updated\n      console.log(\"Receiving Update\")\n      console.log(node)\n\n      this.text = node.text.replaceAll('\\\\n', newline);\n    })\n\n\n\n  },\n  methods:{\n    add(){\n    //  console.log(this.newDo)\n      this.$gun.get('todos').set({GrosTitre: this.newDo})\n      this.newDo = \"\"\n    },\n    command(){\n      let command = {}\n      command.fullCommand = this.command_input.trim()\n      command.commandArray = command.fullCommand.split(\" \")\n      command.first = command.commandArray[0]\n      console.log(\"command\", command)\n      if(command.commandArray[1] == '='){\n        this.set(command)\n      }\n      if(command.commandArray[0] == 'cat'){\n        this.cat(command)\n      }\n      this.command_input = \"\"\n    },\n\n\n    cat(command){\n      let app = this\n      let object = command.commandArray[1]\n\n      console.log(\"lecture de \", object )\n      let path = object.split('.')\n      let currentNode = undefined\n      for (const p of path){\n        console.log(p)\n        currentNode = currentNode == undefined ?  this.$gun.get(p) : currentNode.get(p)\n        console.log(\"current\",currentNode)\n      }\n      currentNode.once(function(data, key){\n        console.log( key, data);\n        console.log('the value is', data)\n        app.last.key = key,\n        app.last.value = data\n      });\n\n    },\n\n    set(command/*, overwrite = true*/){\n      let object = command.commandArray[0]\n      // remove object & equal sign\n      command.commandArray.splice(0, 2)\n      let value = command.commandArray.join(' ')\n      console.log(\"affectation de \", value , \"dans\", object )\n      let path = object.split('.')\n      let currentNode = undefined\n      for (const p of path){\n        console.log(p)\n        currentNode = currentNode == undefined ?  this.$gun.get(p) : currentNode.get(p)\n        console.log(\"current\",currentNode)\n      }\n      currentNode.once(function(data, key){\n        console.log( key, data);\n        console.log('the value is', data)\n      });\n\n      try {\n        value = JSON.parse(value)\n      }catch(e){\n        console.log(e)\n      }\n      finally{\n        currentNode.put(value);\n      }\n\n\n\n    },\n    updateText(){\n      console.log(\"Updating Text\", this.text)\n      this.$gun.get('text').put({text: this.text}) // Edit the value in our db\n    }\n  },\n  watch:{\n\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunTest.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunTest.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GunTest.vue?vue&type=template&id=12e322cb&\"\nimport script from \"./GunTest.vue?vue&type=script&lang=js&\"\nexport * from \"./GunTest.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","attrs","on","$event","command","model","value","callback","$$v","command_input","expression","_m","_s","last","newDo","add","_l","node","key","title","GrosTitre","updateText","text","staticRenderFns","name","data","todos","mounted","$gun","get","map","once","console","log","replaceAll","newline","methods","set","fullCommand","trim","commandArray","split","first","cat","app","object","currentNode","path","p","undefined","splice","join","JSON","parse","e","put","watch","component"],"sourceRoot":""}