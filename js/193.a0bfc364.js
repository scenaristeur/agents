"use strict";(self["webpackChunkagents"]=self["webpackChunkagents"]||[]).push([[193],{8193:function(e,s,t){t.r(s),t.d(s,{default:function(){return a}});var o=function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("div",[e.paths.length>0?t("div",[e._v("Exploring "+e._s(e.paths.length)+" paths. ")]):e._e(),t("CommandInput"),"preview"==e.navigation&&null!=e.currentNode?t("Node"):e._e(),t("Graph",{attrs:{nodes:e.nodes,links:e.links,graphNeedUpdate:e.graphNeedUpdate},on:{update:function(s){e.graphNeedUpdate=s}}}),e._v(" "+e._s(e.pod)+" ")],1)},l=[],n={name:"Visu",components:{Graph:()=>t.e(221).then(t.bind(t,6221)),CommandInput:()=>t.e(932).then(t.bind(t,8932)),Node:()=>t.e(223).then(t.bind(t,4223))},data(){return{links:[],paths:[],jump:0,graphNeedUpdate:!1}},mounted(){console.log("MUST TAKE A LOOK AT COMMUNICA !"),this.showWorlds()},methods:{async explore2(e){console.log(e)},onInputObjectChange(e){let s,t,o;switch(console.log("onCommand",e),e.type){case"triplet":s=this.nodeFromLabel(e.value.subject),this.saveNode(s),t=this.nodeFromLabel(e.value.object),this.saveNode(t),console.log(s.id,t.id),o=this.edgeFromLabel({source:s.id,target:t.id,label:e.value.predicate}),console.log(o),this.saveEdge(o),e.triple={subject:s,edge:o,object:t},this.$saveToGun(e);break;case"url":console.log(e);break;default:console.log("TODO",e)}},saveNode(e){var s=this.nodes.findIndex((s=>s.id==e.id));-1===s?this.nodes.push(e):Object.assign(this.nodes[s],e),this.sendUpdate(e)},saveEdge(e){console.log(e),console.log(this.links),this.links.push(e),console.log(this.nodes,this.links),this.sendUpdate(e)},nodeFromLabel(e){let s="#"+e.trim().split(" ").join("_");return{id:s,name:e,age:0,type:"neurone"}},edgeFromLabel(e){return console.log(e),{source:e.source,target:e.target,label:e.label}},async sendUpdate(e){console.log(e),console.log("le json",this.json)},async exploreFriends(e){let s=this;s.jump++,e.friends.forEach((async function(t){console.log(t);try{if(void 0!=t.webId){let o={url:t.webId,name:t.webId,type:"friend",color:"#00ff00",webId:t.webId};console.log(o);let l=await s.$getPodInfos(o);console.log(l);let n=s.nodes.find((e=>e.url==o.url));console.log("exist",n),void 0==n&&s.nodes.push(o),s.links.push({source:e.webId,target:t.webId,label:"friend"});let i={url:l.storage,name:"storage",color:"#ffff00",type:"storage"};s.nodes.push(i),s.links.push({source:t.webId,target:l.storage,label:"storage"}),console.log(s.jump)}console.log("webId undefined",t.webId)}catch(o){console.log(o)}}))},async explore(e){if(console.log(e),e.endsWith("card#me")){let s=await this.$getPodInfos({webId:e});e=s.storage,this.exploreFriends(s)}let s=this,t=await this.$getResources(e);void 0!=t.compacted?this.processJsonld(t):t.forEach((async function(t){if("file"==t.type){console.log("on entre ici",t),await s.$getResource(t);let e=await s.$getJsonLd(t.url);console.log(e)}console.log(t),s.nodes.push(t),s.links.push({source:e,target:t.url})}))},processJsonld(e){let s=`${e.compacted.url}`,t=-1;for(let o=0;o<this.nodes.length;o++){let l=this.nodes[o];l.url==s&&(t=o,Object.assign(this.nodes[t],e.compacted),this.graphNeedUpdate=!0)}},async explore1(e){this.paths.push(e);let s=await this.$getResources(e);console.log(s);let t=this;s.forEach((function(s){if("folder"==s.type)t.explore(s.url);else if(s.url.endsWith(".jsonld")||"application/ld+json"==s.file.type){s.color="#ffff00";const e=new FileReader;e.onload=async()=>{s.jsonld=JSON.parse(e.result),s.name=s.jsonld["name"],console.log("jsonld",s.jsonld["properties"]);for(const e of s.jsonld["properties"]){console.log(e);for(const s of e.values)console.log(s)}},e.onerror=e=>{console.log(e)},e.readAsText(s.file)}else s.url.endsWith(".ttl")&&(s.color="#00ff00");"inbox"==s.name&&(s.color="#ffffff"),t.nodes.push(s),t.links.push({source:e,target:s.url})})),this.paths=this.paths.filter((s=>s!==e))},showWorlds(){console.log(this.worlds),this.savedWorld={nodes:this.nodes,links:this.links},this.nodes=[],this.links=[],Object.assign(this.nodes,this.worlds),this.nodes.push({id:"worlds",name:"Worlds",color:"#ffff00",type:"univers"}),this.worlds.forEach((e=>{let s=this.nodes.find((s=>s.id===e.status)),t="enabled"==e.status?"#00ff00":"#ff0000";void 0==s&&this.nodes.push({id:e.status,name:e.status,color:t,type:"status"}),this.links.push({source:e.id,target:e.status,label:"status"}),this.links.push({source:"worlds",target:e.status})}))}},watch:{async pod(){if(null!=this.pod){console.log(this.pod);let e={url:this.pod.storage,name:"storage",color:"#ffff00",type:"storage"};this.nodes.push(e);let s={url:this.pod.webId,name:this.pod.name||this.pod.webId,color:"#ff0000",type:"webId"};this.nodes.push(s),this.links.push({source:this.pod.webId,target:this.pod.storage,label:"storage"}),this.explore(this.pod.storage),this.exploreFriends(this.pod)}else this.nodes=[],this.links=[]},mustExplore(){if(null!=this.mustExplore){console.log("mustExplore",this.mustExplore);let e=this.nodes.find((e=>e.url=this.mustExplore)),s=this.mustExplore;console.log("exist ? ",e),void 0==e&&this.nodes.push({id:s,url:s,name:s,color:"#ff00ff",type:"storage"}),this.explore(this.mustExplore)}},inputObject(){this.onInputObjectChange(this.inputObject)},worlds(){this.showWorlds()}},computed:{pod:{get(){return this.$store.state.solid.pod},set(){}},mustExplore:{get(){return this.$store.state.app.mustExplore},set(){}},inputObject:{get(){return this.$store.state.app.inputObject},set(){}},nodes:{get(){return this.$store.state.nodes.nodes},set(){}},worlds:{get(){return this.$store.state.app.worlds},set(){}},navigation:{get(){return this.$store.state.app.navigation},set(){}},currentNode:{get(){return this.$store.state.app.currentNode},set(){}}}},i=n,r=t(1001),d=(0,r.Z)(i,o,l,!1,null,null,null),a=d.exports}}]);
//# sourceMappingURL=193.a0bfc364.js.map