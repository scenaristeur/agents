"use strict";(self["webpackChunkagents"]=self["webpackChunkagents"]||[]).push([[259],{3259:function(e,s,o){o.r(s),o.d(s,{default:function(){return h}});var t=function(){var e=this,s=e.$createElement,o=e._self._c||s;return o("div",[e.paths.length>0?o("div",[e._v("Exploring "+e._s(e.paths.length)+" paths. ")]):e._e(),o("CommandInput"),"preview"==e.navigation&&null!=e.currentNode?o("Node"):e._e(),o("Graph",{attrs:{nodes:e.nodes,links:e.links,graphNeedUpdate:e.graphNeedUpdate},on:{update:function(s){e.graphNeedUpdate=s}}}),e._v(" "+e._s(e.pod)+" ")],1)},n=[],l=o(2045),i={name:"Visu",components:{Graph:()=>o.e(562).then(o.bind(o,3562)),CommandInput:()=>o.e(932).then(o.bind(o,8932)),Node:()=>o.e(526).then(o.bind(o,9526))},data(){return{links:[],paths:[],jump:0,graphNeedUpdate:!1,gunCpt:0,gunNodes:{},gunLinks:[]}},mounted(){console.log("MUST TAKE A LOOK AT COMMUNICA !"),this.showWorlds()},methods:{async explore2(e){console.log(e)},onInputObjectChange(e){let s,o,t;switch(console.log("onCommand",e),e.type){case"triplet":s=this.nodeFromLabel(e.value.subject),this.saveNode(s),o=this.nodeFromLabel(e.value.object),this.saveNode(o),console.log(s.id,o.id),t=this.edgeFromLabel({source:s.id,target:o.id,label:e.value.predicate}),console.log(t),this.saveEdge(t),e.triple={subject:s,edge:t,object:o},this.$saveToGun(e);break;case"url":console.log(e);break;default:console.log("TODO",e)}},saveNode(e){var s=this.nodes.findIndex((s=>s.id==e.id));-1===s?this.nodes.push(e):Object.assign(this.nodes[s],e),this.sendUpdate(e)},saveEdge(e){console.log(e),console.log(this.links),this.links.push(e),console.log(this.nodes,this.links),this.sendUpdate(e)},nodeFromLabel(e){let s="#"+e.trim().split(" ").join("_");return{id:s,name:e,age:0,type:"neurone"}},edgeFromLabel(e){return console.log(e),{source:e.source,target:e.target,label:e.label}},async sendUpdate(e){console.log(e),console.log("le json",this.json)},async exploreFriends(e){let s=this;s.jump++,e.friends.forEach((async function(o){console.log(o);try{if(void 0!=o.webId){let t={url:o.webId,name:o.webId,type:"friend",color:"#00ff00",webId:o.webId};console.log(t);let n=await s.$getPodInfos(t);console.log(n);let l=s.nodes.find((e=>e.url==t.url));console.log("exist",l),void 0==l&&s.nodes.push(t),s.links.push({source:e.webId,target:o.webId,label:"friend"});let i={url:n.storage,name:"storage",color:"#ffff00",type:"storage"};s.nodes.push(i),s.links.push({source:o.webId,target:n.storage,label:"storage"}),console.log(s.jump)}console.log("webId undefined",o.webId)}catch(t){console.log(t)}}))},async explore(e){if(console.log(e),e.endsWith("card#me")){let s=await this.$getPodInfos({webId:e});e=s.storage,this.exploreFriends(s)}let s=this,o=await this.$getResources(e);void 0!=o.compacted?this.processJsonld(o):o.forEach((async function(o){if("file"==o.type){console.log("on entre ici",o),await s.$getResource(o);let e=await s.$getJsonLd(o.url);console.log(e)}console.log(o),s.nodes.push(o),s.links.push({source:e,target:o.url})}))},processJsonld(e){let s=`${e.compacted.url}`,o=-1;for(let t=0;t<this.nodes.length;t++){let n=this.nodes[t];n.url==s&&(o=t,Object.assign(this.nodes[o],e.compacted),this.graphNeedUpdate=!0)}},async explore1(e){this.paths.push(e);let s=await this.$getResources(e);console.log(s);let o=this;s.forEach((function(s){if("folder"==s.type)o.explore(s.url);else if(s.url.endsWith(".jsonld")||"application/ld+json"==s.file.type){s.color="#ffff00";const e=new FileReader;e.onload=async()=>{s.jsonld=JSON.parse(e.result),s.name=s.jsonld["name"],console.log("jsonld",s.jsonld["properties"]);for(const e of s.jsonld["properties"]){console.log(e);for(const s of e.values)console.log(s)}},e.onerror=e=>{console.log(e)},e.readAsText(s.file)}else s.url.endsWith(".ttl")&&(s.color="#00ff00");"inbox"==s.name&&(s.color="#ffffff"),o.nodes.push(s),o.links.push({source:e,target:s.url})})),this.paths=this.paths.filter((s=>s!==e))},showWorlds(){console.log(this.worlds),this.savedWorld={nodes:this.nodes,links:this.links},this.nodes=[],this.links=[],Object.assign(this.nodes,this.worlds),this.nodes.push({id:"worlds",name:"Worlds",color:"#ffff00",type:"univers"}),this.worlds.forEach((e=>{let s=this.nodes.find((s=>s.id===e.status)),o="enabled"==e.status?"#00ff00":"#ff0000";void 0==s&&this.nodes.push({id:e.status,name:e.status,color:o,type:"status"}),this.links.push({source:e.id,target:e.status,label:"status"}),this.links.push({source:"worlds",target:e.status})}))},gunNodeLoop1(e,s){console.log(e,s);let o=this.nodes.find((e=>e.id==s));console.log("node parent",o);let t=(0,l.Z)(),n={id:t};for(const[l,d]of Object.entries(e))switch(console.log(l,typeof d,d),typeof d){case"string":case"number":case"boolean":o[l]=d;var i=this.nodes.findIndex((e=>e.id==o.id));-1===i?this.nodes.push(o):Object.assign(this.nodes[i],o);break;case"object":this.nodes.push(n),this.links.push({source:s,target:n.id,label:l}),this.gunNodeLoop(d,n.id);break;default:console.log("no handler for ",typeof d)}},readGunNode(e,s){s++;let o=this;console.log(s,"soul",e);let t={id:e,name:e};this.gunNodes[e]=t;var n=this.nodes.findIndex((e=>e.id==t.id));-1===n?this.nodes.push(t):Object.assign(this.nodes[n],t),console.log(s,Object.entries(o.gunNodes).length),s<3&&Object.entries(o.gunNodes).length<50&&this.$gun.get(e).map(((t,n)=>{if(null!=t&&void 0!=t._){let l=t._["#"];this.readGunNode(l,s);let i={source:e,target:l,label:n};o.gunLinks.push(i)}else null!=t&&(this.gunNodes[e][n]=t)}));for(const i of Object.values(this.gunNodes)){var l=this.nodes.findIndex((e=>e.id==i.id));-1===l?this.nodes.push(i):Object.assign(this.nodes[l],i)}console.log("done read gun"),this.graphNeedUpdate=!0}},watch:{gunNode1(){let e=0;this.gunNodes={},this.readGunNode(this.gunNode.id,e),console.log("DONEGUN ")},gunNode(){console.log(this.gunNode);var e=this.nodes.findIndex((e=>e.id==this.gunNode.id));-1===e?this.nodes.push(this.gunNode):Object.assign(this.nodes[e],this.gunNode),"brain"==this.gunNode.type&&this.$gun.get(this.gunNode.id).load((e=>{console.log("doc",e),console.log("done")}))},async pod(){if(null!=this.pod){console.log(this.pod);let e={url:this.pod.storage,name:"storage",color:"#ffff00",type:"storage"};this.nodes.push(e);let s={url:this.pod.webId,name:this.pod.name||this.pod.webId,color:"#ff0000",type:"webId"};this.nodes.push(s),this.links.push({source:this.pod.webId,target:this.pod.storage,label:"storage"}),this.explore(this.pod.storage),this.exploreFriends(this.pod)}else this.nodes=[],this.links=[]},mustExplore(){if(null!=this.mustExplore){console.log("mustExplore",this.mustExplore);let e=this.nodes.find((e=>e.url=this.mustExplore)),s=this.mustExplore;console.log("exist ? ",e),void 0==e&&this.nodes.push({id:s,url:s,name:s,color:"#ff00ff",type:"storage"}),this.explore(this.mustExplore)}},inputObject(){this.onInputObjectChange(this.inputObject)},worlds(){this.showWorlds()}},computed:{pod:{get(){return this.$store.state.solid.pod},set(){}},mustExplore:{get(){return this.$store.state.app.mustExplore},set(){}},inputObject:{get(){return this.$store.state.app.inputObject},set(){}},nodes:{get(){return this.$store.state.nodes.nodes},set(){}},worlds:{get(){return this.$store.state.app.worlds},set(){}},navigation:{get(){return this.$store.state.app.navigation},set(){}},currentNode:{get(){return this.$store.state.app.currentNode},set(){}},gunNode:{get(){return this.$store.state.app.gunNode},set(){}}}},d=i,r=o(1001),a=(0,r.Z)(d,t,n,!1,null,null,null),h=a.exports}}]);
//# sourceMappingURL=259.8ae29a73.js.map