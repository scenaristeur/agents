{"version":3,"sources":["webpack:///./src/components/three/ThreeScene.vue?c000","webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack:///src/components/three/ThreeScene.vue","webpack:///./src/components/three/ThreeScene.vue?6b29","webpack:///./src/components/three/ThreeScene.vue","webpack:///./src/components/three/ThreeScene.vue?65cb"],"names":["render","_vm","this","_h","$createElement","_c","_self","on","addCube","_v","ref","_s","files","length","staticRenderFns","_changeEvent","type","_startEvent","_endEvent","object","domElement","super","undefined","console","warn","document","error","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","ctrlKey","metaKey","shiftKey","trackPointer","DOLLY_ROTATE","push","i","splice","pointer","passive","name","props","data","scene","camera","renderer","items","mounted","init","methods","cube","randomNumber","renderScene","setSize","window","innerWidth","innerHeight","canvas","appendChild","directionalLight","directionalLight2","directionalLight3","light","light2","light3","light4","animate","requestAnimationFrame","watch","component"],"mappings":"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","file":"js/chunk-738a5020.5d45595d.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('b-button',{on:{\"click\":_vm.addCube}},[_vm._v(\"Add\")]),_c('div',{ref:\"canvas\"}),_vm._v(\" \"+_vm._s(_vm.files.length)+\" \")],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\tthis.mouseButtons.LEFT = MOUSE.PAN;\n\t\tthis.mouseButtons.RIGHT = MOUSE.ROTATE;\n\n\t\tthis.touches.ONE = TOUCH.PAN;\n\t\tthis.touches.TWO = TOUCH.DOLLY_ROTATE;\n\n\t}\n\n}\n\nexport { OrbitControls, MapControls };\n","m<template>\n  <div>\n    <b-button @click=\"addCube\">Add</b-button>\n  <div ref=\"canvas\"></div>\n  {{ files.length}}\n</div>\n</template>\n\n<script>\n//https://www.devmachine.fr/three.js/vue.js/2021/01/25/three-with-vue.html\n// import * as THREE from \"three\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n// import { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\n\n// https://wallsianh.medium.com/what-i-wish-id-known-about-three-js-415e7f655643\n// https://github.com/Brick-Walls-Tutorials/three-js-tutorial-part-1/blob/main/main.js\n//npm install three and ES6 import it to get started with Three.js\nimport * as THREE from 'three';\n\n//scene defines relational space that all of our 3D elements will live in\n// const scene = new THREE.Scene();\n//\n// //renderer defines the physical space on screen that will be rendering our 3D meshes and camera views\n// const renderer = new THREE.WebGLRenderer();\n\nexport default {\n  name: \"ThreeScene\",\n  props:['files'],\n  data() {\n    return {\n      scene: new THREE.Scene(),\n      camera: undefined,\n      renderer: new THREE.WebGLRenderer(),\n      items: []\n    };\n  },\n  mounted(){\n    this.init()\n  },\n  methods: {\n    addCube(){\n      const geometry = new THREE.BoxGeometry(.5,.5,.5)\n      const material = new THREE.MeshLambertMaterial({color: Math.random() * 0xffffff })\n      let cube = new THREE.Mesh(geometry, material)\n\n      //add cube to scene\n      this.scene.add(cube)\n      cube.position.set(this.randomNumber(-20,20),this.randomNumber(-20,20),this.randomNumber(-20,20))\n      this.items.push(cube)\n      this.renderScene()\n    },\n    init(){\n\n      /*\n      ADD LINE BELOW to make renderer take up the full screen\n      */\n      this.renderer.setSize(window.innerWidth, window.innerHeight*0.75)\n\n      //REMEMBER to append renderer.domElement, not just renderer\n      const canvas = this.$refs.canvas //document.getElementById(\"canvas\")\n      canvas.appendChild(this.renderer.domElement)\n\n      //camera defines the perspective from which a scene is view\n      //we use a perspective camera here to make obejct size depend on distance\n      //the camera constructor takes fov, aspect, near, and far properties\n      this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n\n      //OBJECTS SECTION\n      //meshes are made up of a geometry and a material\n      const geometry = new THREE.BoxGeometry(1,1,1)\n      const material = new THREE.MeshLambertMaterial({color: 0xffffff})\n      let cube = new THREE.Mesh(geometry, material)\n\n      //add cube to scene\n      this.scene.add(cube)\nthis.items.push(cube)\n      // change camera position so that we can see the cube\n      this.camera.position.set(30,1,1)\n      // direct camera at the cube position\n      this.camera.lookAt(cube.position)\n\n      // create directional light\n      const directionalLight = new THREE.DirectionalLight(0xfffff)\n      this.scene.add(directionalLight)\n      // change light position\n      directionalLight.position.set(3,2,1)\n\n      const directionalLight2 = new THREE.DirectionalLight(0xffff00)\n      this.scene.add(directionalLight2)\n      // change light position\n      directionalLight2.position.set(-3,-2,-1)\n\n      const directionalLight3 = new THREE.DirectionalLight(0xffffff, 2);\ndirectionalLight3.position.set(0, 1, 0);\ndirectionalLight3.castShadow = true;\nthis.scene.add(directionalLight3);\nconst light = new THREE.PointLight(0xffffcc, 1);\nlight.position.set(0, 600, 1000);\nthis.scene.add(light);\nconst light2 = new THREE.PointLight(0xe6f7ff, 1);\nlight2.position.set(1000, 200, 0);\nthis.scene.add(light2);\nconst light3 = new THREE.PointLight(0xfff2e6, 1);\nlight3.position.set(0, 200, -1000);\nthis.scene.add(light3);\nconst light4 = new THREE.PointLight(0xc4c400, 1);\nlight4.position.set(-1000, 600, 1000);\nthis.scene.add(light4);\n\n\n\n        const controls = new OrbitControls(this.camera, this.renderer.domElement);\n        controls.minDistance = 2;\n        controls.maxDistance = 30;\n        // controls.enablePan = false;\n        controls.target.set(0, 0, 0);\n        controls.addEventListener(\"change\", this.renderScene);\n\n      // animation cycle will recursively call requestAnimationFrame and animate your scene\n      this.animate()\n    },\n    animate(){\n      this.renderer.render(this.scene, this.camera)\n      // for (const cube of this.items){\n      //   cube.rotation.x += 0.01\n      //   cube.rotation.y += 0.01;\n      // }\n\n\n      requestAnimationFrame(this.animate)\n    },\n    renderScene() {\n      this.renderer.render(this.scene, this.camera);\n    },\n    randomNumber(min, max) {\n    return Math.random() * (max - min) + min;\n}\n    // init1(){\n    //   this.scene = new THREE.Scene();\n    //   this.scene.background = null;\n    //   this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    //   this.renderer.outputEncoding = THREE.sRGBEncoding;\n    //   this.renderer.setPixelRatio(window.devicePixelRatio);\n    //   const container = document.getElementById(this.containerId);\n    //   this.renderer.setSize(container.offsetWidth, container.offsetHeight);\n    //   container.appendChild(this.renderer.domElement);\n    //\n    //   this.camera = new THREE.PerspectiveCamera(\n    //     45,\n    //     container.offsetWidth / container.offsetHeight,\n    //     0.25,\n    //     20\n    //   );\n    //   this.camera.position.set(this.modelSettings.cameraPosition[0], this.modelSettings.cameraPosition[1], this.modelSettings.cameraPosition[2]);\n    //\n    //   const controls = new OrbitControls(this.camera, this.renderer.domElement);\n    //   controls.minDistance = 2;\n    //   controls.maxDistance = 5;\n    //   // controls.enablePan = false;\n    //   controls.target.set(0, 0, 0);\n    //   controls.addEventListener(\"change\", this.renderScene);\n    //\n    //   const directionalLight = new THREE.DirectionalLight(0xffffff, 2);\n    //   directionalLight.position.set(0, 1, 0);\n    //   directionalLight.castShadow = true;\n    //   this.scene.add(directionalLight);\n    //   const light = new THREE.PointLight(0xffffcc, 1);\n    //   light.position.set(0, 600, 1000);\n    //   this.scene.add(light);\n    //   const light2 = new THREE.PointLight(0xe6f7ff, 1);\n    //   light2.position.set(1000, 200, 0);\n    //   this.scene.add(light2);\n    //   const light3 = new THREE.PointLight(0xfff2e6, 1);\n    //   light3.position.set(0, 200, -1000);\n    //   this.scene.add(light3);\n    //   const light4 = new THREE.PointLight(0xc4c400, 1);\n    //   light4.position.set(-1000, 600, 1000);\n    //   this.scene.add(light4);\n    //\n    //   let loader = new GLTFLoader();\n    //   loader.load(\n    //     this.modelSettings.link,\n    //     data => {\n    //       var object = data.scene;\n    //       object.position.set(0,0,0);\n    //       if(this.modelSettings.scale) object.scale.set(this.modelSettings.scale, this.modelSettings.scale,     this.modelSettings.scale);\n    //       this.scene.add(object);\n    //       this.renderScene();\n    //     }\n    //   );\n    //\n    //\n    // }\n  },\n  watch:{\n    files(){\n      for (const f of this.files){\n        this.addCube(f)\n      }\n    }\n  }\n}\n</script>\n\n<style>\nbody {\n  margin: 0;\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overscroll-behavior: none;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeScene.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeScene.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ThreeScene.vue?vue&type=template&id=1fd10d2d&\"\nimport script from \"./ThreeScene.vue?vue&type=script&lang=js&\"\nexport * from \"./ThreeScene.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ThreeScene.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeScene.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}